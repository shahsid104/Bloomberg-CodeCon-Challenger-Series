//Problem        : Finals Spring 2015 - Conference Room Scheduler
//Language       : C++14
//Compiled Using : g++
//Version        : GCC 4.9.1
//Input for your program will be provided from STDIN
//Print out all output from your program to STDOUT

#include <iostream>
#include <string>
#include <algorithm>
#include <climits>
#include <map>
#include <sstream>
#include <vector>

using namespace std;

int main() {
    map<int, vector<int>> rooms;
    
    int n;
    cin >> n;
    
    int temp = 2;
    string inp;
    
    while(getline(cin, inp))
    {
        string a;
        vector<string> temp;
        stringstream ss(inp);
        
        while(getline(ss, a, '-'))
            temp.push_back(a);
            
    	
    	if(temp.size() == 0)
    	    continue;
    	    
    	if(temp.size() == 2)
    	{
    	    int timeSlot = stoi(temp[0]);
    	    int off = stoi(temp[1]);
    	    string res = "";
    	    for(int i = 1; i <= n; i++)
    	    {
    	        if(rooms.find(i) == rooms.end())
    	            res += to_string(i) + " ";
    	        
    	        else
    	        {
    	            int flag = 0;
    	            for(int j = timeSlot; j < (timeSlot + off); j++)
    	            {
    	                if(rooms[i][j] == 1)
    	                {
    	                    flag = 1;
    	                    break;
    	                }
    	            }
    	            
    	            if(flag == 0)
    	                res += to_string(i) + " ";
    	        }
    	    }
    	    
    	    if(res.size() > 0)
    	    {
    	        res.pop_back();
    	        cout << res << endl;
    	    }
    	        
    	    else
    	        cout << "None" << endl;
    	}
    	
    	else
    	{
    	    int roomId = stoi(temp[0]);
    	    int timeSlot = stoi(temp[1]);
    	    int off = stoi(temp[2]);
    	    int flag = 0;
    	    
    	    if(rooms.find(roomId) == rooms.end())
    	    {
    	        cout << 'Y' << endl;
    	        vector<int> times(33);
    	        rooms[roomId] = times;
    	        for(int i = timeSlot; i < (timeSlot + off); i++)
    	            rooms[roomId][i] = 1;
    	        continue;
    	    }
    	    
    	    else
    	    {
    	        for(int i = timeSlot; i < (timeSlot + off); i++)
    	        {
    	            if(rooms[roomId][i] == 1)
    	            {
    	                cout << 'N' << endl;
    	                flag = 1;
    	                break;
    	            }
    	        }
    	        
    	        if(flag == 0)
    	        {
    	            cout << 'Y' << endl;
    	            for(int i = timeSlot; i < (timeSlot + off); i++)
    	                rooms[roomId][i] = 1;
    	        }
    	    }
    	}
    }
    return 0;
}
