//Problem        : 2016 Qualifiers - Lost in the Pantry
//Language       : C++
//Compiled Using : g++
//Version        : GCC 4.9.1
//Input for your program will be provided from STDIN
//Print out all output from your program to STDOUT

#include <iostream>
#include <string>
#include <algorithm>
#include <climits>

using namespace std;

int res = 0;
void dfs(int i, int j, int end_i, int end_j, vector<vector<char>>& maze, vector<vector<int>>& visited, char same_char,  int c)
{
    if(i < 0 || j < 0 || i >= maze.size() || j >= maze[0].size())
        return;
    
    if(maze[i][j] != same_char)
        return;
        
    if(visited[i][j] == 1)
        return;
    
    if(i == end_i && j == end_j)
    {
        res = c;
        return;
    }
    
    visited[i][j] = 1;
    dfs(i + 1, j , end_i, end_j, maze, visited, same_char, c + 1);
    dfs(i, j + 1, end_i, end_j, maze, visited, same_char, c + 1);
    dfs(i - 1, j , end_i, end_j, maze, visited, same_char, c + 1);
    dfs(i , j - 1, end_i, end_j, maze, visited, same_char, c + 1);
}

int main() {
    int row, col;
    cin >> row >> col;
    
    vector<vector<char>> maze(row, vector<char>(col));
    vector<vector<int>> visited(row, vector<int>(col, 0));
    
    for(int i = 0; i < maze.size(); i++)
    {
        for(int j = 0; j < maze[0].size(); j++)
            cin >> maze[i][j];
    }
    
    int start_i, start_j;
    cin >> start_i >> start_j;
    
    char same_char = maze[start_i][start_j];
    
    int end_i, end_j;
    cin >> end_i >> end_j;
    res = 0;
    
    dfs(start_i, start_j, end_i, end_j, maze, visited, same_char, 1);
    
    cout << res << endl;
    return 0;
}
